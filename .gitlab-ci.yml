image: docker:latest

stages:
  - build_image
  - test
  - deploy_image

variables:
  PROGRESSION_DIR: $CI_PROJECT_DIR
  DOCKER_HOST: "tcp://dind:2375"

# Stage test

# Tests unitaires
test_unitaires:
  stage: test
  services:
  - name: git.dti.crosemont.quebec:5050/progression/dind_workaround:latest
    command: ["--tls=false"]
    alias: dind
  script:
    - docker run $CI_REGISTRY/progression/progression_frontend:test npx eslint -c eslint.json src/

# Stage build_image

# Construction de l'image
const_image:
  stage: build_image
  services:
  - name: git.dti.crosemont.quebec:5050/progression/dind_workaround:latest
    command: ["--tls=false"]
    alias: dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cp $PROGRESSION_DIR/app/.env.prod $PROGRESSION_DIR/app/.env
    - \[\[ "$CI_COMMIT_REF_NAME" = "dev" \]\] && target="build-stage" || target="production-stage"
    - echo TARGET $target
    - docker build --build-arg NODE_ENV=dev --target $target -t $CI_REGISTRY/progression/progression_frontend:test .
    - docker push $CI_REGISTRY/progression/progression_frontend:test

# Stage deploy_image

# DÃ©ploiement sur /staging
deploy:
  stage: deploy_image
  needs: [const_image]
  services:
  - name: git.dti.crosemont.quebec:5050/progression/dind_workaround:latest
    command: ["--tls=false"]
    alias: dind
  script:
    - chmod 400 /builds/progression/progression_frontend.tmp/ID_RSA
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $CD_USER@$CD_HOST -p $CD_PORT $CD_COMMAND test $( [ "$CI_COMMIT_REF_NAME" = "master" ] && echo "staging" || echo $CI_COMMIT_REF_NAME )
  only:
    - master
    - dev